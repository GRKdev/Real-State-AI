import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "@/app/globals.css";
import { ThemeProvider } from "@/components/theme-provider";
import { ModeToggle } from "@/components/ui/toggle-theme";
import Logo from "@/components/ui/logo";
import { Analytics } from "@vercel/analytics/react"
import {
  SignInButton,
  UserButton,
} from "@clerk/nextjs";
import { auth } from '@clerk/nextjs';
import ClerkProviderWrapper from "@/components/ClerkProviderWrapper";
import { Button } from "@/components/ui/button";
import LocaleSwitcher from "@/components/locale-switcher";
import { i18n, type Locale } from '@/i18n-config';
import { LocaleProvider } from "@/contexts/localeContext";


const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Real State AIpp",
  description: "Generated by GRK, this is a search engine for real state properties. It uses AI to search for properties with natural language.",
};

export async function generateStaticParams() {
  return i18n.locales.map((locale) => ({ lang: locale }));
}


export default function RootLayout({
  children,
  params,

}: Readonly<{
  children: React.ReactNode;
  params: { lang: Locale };

}>) {
  const { userId } = auth();

  return (
    <html lang={params.lang}>
      <body className={inter.className}>
        <ThemeProvider
          attribute="class"
          defaultTheme="system"
          enableSystem
          disableTransitionOnChange
        >
          <ClerkProviderWrapper>
            <LocaleProvider initialLocale={params.lang}>
              <div className="fixed z-50 pl-40 pt-5 hidden lg:block">
                <Logo lang={params.lang} />
              </div>
              <div className="fixed flex top-0 left-0 p-4 pl-10 z-50">
                <div className="hidden lg:block">
                </div>
              </div>
              <div className="fixed flex top-0 right-0 p-4 z-50 items-center">
                {!userId &&
                  <Button variant="outline">
                    <SignInButton />
                  </Button>
                }
                <div className="mr-4">
                  {userId && (
                    <UserButton afterSignOutUrl="/" />
                  )}
                </div>

                <div className="hidden lg:block">
                  <LocaleSwitcher />
                  <ModeToggle />
                </div>

              </div>

              <main className="overflow-y-auto h-screen w-full pt-28 pb-32">
                {children}
                <Analytics />
              </main>
            </LocaleProvider>

          </ClerkProviderWrapper>
        </ThemeProvider>

      </body>
    </html>
  );
}